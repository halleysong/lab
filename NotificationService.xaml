<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1098,2401" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Security</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Algorithms</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="메인 시퀀스 (액티비티: Sequence)" sap:VirtualizedContainerService.HintSize="512,2336" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="SERVICE_ID" />
      <Variable x:TypeArguments="x:String" Name="ACCESS_KEY" />
      <Variable x:TypeArguments="x:String" Name="SECRET_KEY" />
      <Variable x:TypeArguments="x:String" Name="url" />
      <Variable x:TypeArguments="x:String" Name="timestamp" />
      <Variable x:TypeArguments="x:String" Name="signature" />
      <Variable x:TypeArguments="x:String" Name="dataJson" />
      <Variable x:TypeArguments="x:String" Name="responseJson" />
      <Variable x:TypeArguments="njl:JObject" Name="responseJObject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="네이버 클라우드 플랫폼에서 생성한 정보입니다.&#xA;API 주소와 시그니처를 만들 때 사용합니다." DisplayName="인증 관련 정보 (액티비티: Multiple Assign)" sap:VirtualizedContainerService.HintSize="450,205" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">SERVICE_ID</mca:CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">ncp:sms:kr:254711270079:send_sms</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">ACCESS_KEY</mca:CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">ebZ4fUmim0UUVecUZeFA</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">SECRET_KEY</mca:CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">A4WiuzJNQyPOgQVqzo1uGTBDAL4NcLjhHmrd2Qhh</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <Assign sap2010:Annotation.AnnotationText="네이버 클라우드 플랫폼 API 주소입니다." DisplayName="주소 (액티비티: Assign)" sap:VirtualizedContainerService.HintSize="450,113" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">url</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">"https://sens.apigw.ntruss.com/sms/v2/services/"+SERVICE_ID+"/messages"</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="메시지 보내기 절차를 시작하는 시점입니다." DisplayName="타임스탬프 (액티비티: Assign)" sap:VirtualizedContainerService.HintSize="450,113" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">timestamp</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">DateTimeOffset.UtcNow.ToUnixTimeMilliseconds().ToString()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="네이버 클라우드 플랫폼에서 사용자를 인증할 때 사용하기 위한 시그니처를 생성합니다.&#xA;&#xA;네이버가 요청하는 문자열을 SHA256 알고리즘으로 해싱하여 나온 문자열이 출력됩니다.&#xA;&#xA;# 입력&#xA;SERVICE_ID, ACCESS_KEY, SECRET_KEY, timestamp&#xA;&#xA;# 출력&#xA;signature" Code="string message = $&quot;POST /sms/v2/services/{SERVICE_ID}/messages\n{timestamp}\n{ACCESS_KEY}&quot;;&#xD;&#xA;&#xD;&#xA;HMACSHA256 hmac = new HMACSHA256(Encoding.UTF8.GetBytes(SECRET_KEY));&#xD;&#xA;hmac.Initialize();&#xD;&#xA;&#xD;&#xA;byte[] rawHmac = hmac.ComputeHash(Encoding.UTF8.GetBytes(message));&#xD;&#xA;&#xD;&#xA;signature = Convert.ToBase64String(rawHmac);" DisplayName="시그니처 생성 (액티비티: Invoke Code)" sap:VirtualizedContainerService.HintSize="450,342" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="SERVICE_ID">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">SERVICE_ID</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ACCESS_KEY">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">ACCESS_KEY</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="SECRET_KEY">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">SECRET_KEY</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="timestamp">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">timestamp</mca:CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="signature">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">signature</mca:CSharpReference>
        </OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:ReadTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="JSON 형식으로 작성된 파일을 읽어 메시지 전송 정보 문자열을 가져옵니다." DisplayName="data 파일 읽기 (액티비티: Read Text File)" FileName="data.json" sap:VirtualizedContainerService.HintSize="450,122" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
      <ui:ReadTextFile.Content>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">dataJson</mca:CSharpReference>
        </OutArgument>
      </ui:ReadTextFile.Content>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadTextFile>
    <Sequence sap2010:Annotation.AnnotationText="HTTP Request 액티비티를 사용하기 위해서는 패키지를 설치해야 합니다.&#xA;&#xA;# 패키지 설치 방법&#xA;1. UiPath 화면 상단의 [디자인 탭 &gt; 패키지 관리] 클릭, 패키지 관리 창을 엽니다.&#xA;2. 좌측 탭에서 모든 패키지 클릭, 검색상자에서 'WebAPI'를 입력하여 검색합니다.&#xA;3. 'UiPath.WebAPI.Activities' 패키지를 선택한 뒤 설치 버튼을 클릭합니다.&#xA;4. 패키지 관리 창의 저장 버튼을 클릭하여 설치를 시작합니다.&#xA;&#xA;HTTP Request 액티비티로 API를 호출할 수 있습니다.&#xA;&#xA;# HTTP Request 액티비티 입력 속성&#xA;- 옵션: 머리글(헤더), 본문(바디), 본문 형식(컨텐트 타입)&#xA;- 입력: URL 요청(주소), 요청 메서드(GET/POST)&#xA;- 출력: 응답 내용(HTTP Response)" DisplayName="API 호출 시퀀스 (액티비티: Sequence)" sap:VirtualizedContainerService.HintSize="450,535" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/json" DisplayName="HTTP Request" EnableSSLVerification="True" sap:VirtualizedContainerService.HintSize="388,70" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" TimeoutMS="6000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Body>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">dataJson</mca:CSharpValue>
          </InArgument>
        </ui:HttpClient.Body>
        <ui:HttpClient.Cookies>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Cookies>
        <ui:HttpClient.EndPoint>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">url</mca:CSharpValue>
          </InArgument>
        </ui:HttpClient.EndPoint>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="x-ncp-apigw-timestamp">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">timestamp</mca:CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="x-ncp-iam-access-key">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">ACCESS_KEY</mca:CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="x-ncp-apigw-signature-v2">
            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">signature</mca:CSharpValue>
          </InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.Result>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">responseJson</mca:CSharpReference>
          </OutArgument>
        </ui:HttpClient.Result>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <WriteLine DisplayName="statusCode 출력 (액티비티: Write Line)" sap:VirtualizedContainerService.HintSize="388,62" sap2010:WorkflowViewState.IdRef="WriteLine_5">
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">responseJson</mca:CSharpValue>
        </InArgument>
      </WriteLine>
    </Sequence>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="응답 받은 JSON 형식의 문자열을 Newtonsoft의 JSON 객체로 역직렬화 합니다.&#xA;&#xA;# 타입 아규먼트&#xA;Newtonsoft.Json.Linq.JObject" DisplayName="JSON 객체 생성 (액티비티: Deserialize JSON)" sap:VirtualizedContainerService.HintSize="450,147" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2">
      <ui:DeserializeJson.JsonObject>
        <OutArgument x:TypeArguments="njl:JObject">
          <mca:CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">responseJObject</mca:CSharpReference>
        </OutArgument>
      </ui:DeserializeJson.JsonObject>
      <ui:DeserializeJson.JsonString>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">responseJson</mca:CSharpValue>
        </InArgument>
      </ui:DeserializeJson.JsonString>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:DeserializeJson>
    <WriteLine DisplayName="statusCode 출력 (액티비티: Write Line)" sap:VirtualizedContainerService.HintSize="450,62" sap2010:WorkflowViewState.IdRef="WriteLine_1">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">"statusCode: " + (string)responseJObject["statusCode"]</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <WriteLine DisplayName="statusName 출력 (액티비티: Write Line)" sap:VirtualizedContainerService.HintSize="450,62" sap2010:WorkflowViewState.IdRef="WriteLine_2">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"statusName: " + (string)responseJObject["statusName"]</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <WriteLine DisplayName="requestId 출력 (액티비티: Write Line)" sap:VirtualizedContainerService.HintSize="450,62" sap2010:WorkflowViewState.IdRef="WriteLine_3">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">"requestId: " + (string)responseJObject["requestId"]</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <WriteLine DisplayName="requestTime 출력 (액티비티: Write Line)" sap:VirtualizedContainerService.HintSize="450,62" sap2010:WorkflowViewState.IdRef="WriteLine_4">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">"requestTime: " + (string)responseJObject["requestTime"]</mca:CSharpValue>
      </InArgument>
    </WriteLine>
  </Sequence>
</Activity>